{"version":3,"file":"editing.js","sourceRoot":"","sources":["../../src/foundation/editing.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AttributeValue,\n  Edit,\n  Insert,\n  isComplex,\n  isInsert,\n  isNamespaced,\n  isRemove,\n  isUpdate,\n  Remove,\n  Update,\n} from './edit-event.js';\n\nexport function localAttributeName(attribute: string): string {\n  return attribute.includes(':') ? attribute.split(':', 2)[1] : attribute;\n}\n\nfunction handleInsert({\n  parent,\n  node,\n  reference,\n}: Insert): Insert | Remove | [] {\n  try {\n    const { parentNode, nextSibling } = node;\n    parent.insertBefore(node, reference);\n    if (parentNode)\n      return {\n        node,\n        parent: parentNode,\n        reference: nextSibling,\n      };\n    return { node };\n  } catch (e) {\n    // do nothing if insert doesn't work on these nodes\n    return [];\n  }\n}\n\nfunction handleUpdate({ element, attributes }: Update): Update {\n  const oldAttributes = { ...attributes };\n  Object.entries(attributes)\n    .reverse()\n    .forEach(([name, value]) => {\n      let oldAttribute: AttributeValue;\n      if (isNamespaced(value!))\n        oldAttribute = {\n          value: element.getAttributeNS(\n            value.namespaceURI,\n            localAttributeName(name)\n          ),\n          namespaceURI: value.namespaceURI,\n        };\n      else\n        oldAttribute = element.getAttributeNode(name)?.namespaceURI\n          ? {\n              value: element.getAttribute(name),\n              namespaceURI: element.getAttributeNode(name)!.namespaceURI!,\n            }\n          : element.getAttribute(name);\n      oldAttributes[name] = oldAttribute;\n    });\n  for (const entry of Object.entries(attributes)) {\n    try {\n      const [attribute, value] = entry as [string, AttributeValue];\n      if (isNamespaced(value)) {\n        if (value.value === null)\n          element.removeAttributeNS(\n            value.namespaceURI,\n            localAttributeName(attribute)\n          );\n        else element.setAttributeNS(value.namespaceURI, attribute, value.value);\n      } else if (value === null) element.removeAttribute(attribute);\n      else element.setAttribute(attribute, value);\n    } catch (e) {\n      // do nothing if update doesn't work on this attribute\n      delete oldAttributes[entry[0]];\n    }\n  }\n  return {\n    element,\n    attributes: oldAttributes,\n  };\n}\n\nfunction handleRemove({ node }: Remove): Insert | [] {\n  const { parentNode: parent, nextSibling: reference } = node;\n  node.parentNode?.removeChild(node);\n  if (parent)\n    return {\n      node,\n      parent,\n      reference,\n    };\n  return [];\n}\n\nexport function handleEdit(edit: Edit): Edit {\n  if (isInsert(edit)) return handleInsert(edit);\n  if (isUpdate(edit)) return handleUpdate(edit);\n  if (isRemove(edit)) return handleRemove(edit);\n  if (isComplex(edit)) return edit.map(handleEdit).reverse();\n  return [];\n}\n\nexport type LogEntry = { undo: Edit; redo: Edit };\n"]}